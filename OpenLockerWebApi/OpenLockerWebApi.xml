<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenLockerWebApi</name>
    </assembly>
    <members>
        <member name="T:OpenLockerWebApi.Controllers.BlobController">
            <summary>
            A controller to Control all the api calls related to blob storage
            Authentication is required for all the calls intended to be done through this controller.
            </summary>
        </member>
        <member name="M:OpenLockerWebApi.Controllers.BlobController.#ctor(OpenLockerWebApi.Services.UserService.IUserService,OpenLockerWebApi.Services.BlobService.IBlobService)">
            <summary>
            Constructor loading userservice and blobservice from the DI controller
            DI -> Dependency Injection
            </summary>
            <param name="userService"></param>
            <param name="blobService"></param>
        </member>
        <member name="T:OpenLockerWebApi.Controllers.UserController">
            <summary>
            Api Controller for all the User related fields such as register, login
            </summary>
        </member>
        <member name="M:OpenLockerWebApi.Controllers.UserController.#ctor(OpenLockerWebApi.Services.UserService.IUserService,AutoMapper.IMapper)">
            <summary>
            Default Constructor which is designed to work with DI of this project
            </summary>
            <param name="_userService">Implementation of the IUserService received from the DI container</param>
            <param name="mapper">Implementation of Automapper also received from the DI container</param>
        </member>
        <member name="M:OpenLockerWebApi.Controllers.UserController.Register(OpenLockerWebApi.DTOs.User.UserCreate)">
            <summary>
            Controller to Enable Registration of users
            </summary>
            <remarks>
            How to Call:
                POST /user/register
            
            Sample Request:
                {
                    "UserName": "GoodUserName",
                    "EmailAddress": "Email@server.com",
                    "Password": "SomeVeryLongPassword428@"
                }
            </remarks>
            <param name="userCreateBody">Necessary Data for registering a user</param>
            <returns>CreatedResult if a success UnprocessableEntityResult if not successful</returns>
        </member>
        <member name="M:OpenLockerWebApi.Controllers.UserController.Login(OpenLockerWebApi.DTOs.User.UserLogin)">
            <summary>
            Route to Facilitate User Login and generate JWT token as well as refresh token for authorised users
            </summary>
            <param name="loginCredentials">Username and Password for the user</param>
            <returns>Ok if it was successfull or ForbiddenResult if failed</returns>
        </member>
        <member name="M:OpenLockerWebApi.Controllers.UserController.GetUsers">
            <summary>
            Get a list of all registered Users
            </summary>
            <returns>Readable list of all registered users</returns>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.Blob.DeleteBlobDto">
            <summary>
            DTO to be received from user when a delete operation is to be performed
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.DeleteBlobDto.FileName">
            <summary>
            File name which has to be deleted. Prefixes should be included in the filename
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.Blob.DownloadFileDto">
            <summary>
            File Details which is to be downloaded
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.DownloadFileDto.FileName">
            <summary>
            name of the file prefixes included from the root of the container
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.Blob.File">
            <summary>
            File Information to be returned back to the user
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.File.FileName">
            <summary>
            Name of the file
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.File.LastModified">
            <summary>
            DateTime when the file was last modified
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.File.ContentLength">
            <summary>
            Size of the file
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.File.ContentType">
            <summary>
            Content Type of the file
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.File.CreatedOn">
            <summary>
            Time when the file was first uploaded
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.Blob.GetFilesDto">
            <summary>
            DTO to utilise the get files function
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.GetFilesDto.Prefix">
            <summary>
            Prefix from where you want all the files to be listed
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.Blob.GetUploadFileUriRequest">
            <summary>
            File Details which is requested to be uploaded
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.GetUploadFileUriRequest.FileName">
            <summary>
            Filename including the prefix from the root of container
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.Blob.HierarchealContent">
            <summary>
            Response Data type to be send when all the files of a particular folder is requested
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.HierarchealContent.FolderPrefix">
            <summary>
            Prefix Folder
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.Blob.HierarchealContent.Files">
            <summary>
            File item for each file in the current directory
            </summary>
        </member>
        <member name="M:OpenLockerWebApi.DTOs.Blob.HierarchealContent.FromBlobHierarchyItem(System.Collections.Generic.List{Azure.Storage.Blobs.Models.BlobHierarchyItem})">
            <summary>
            Load current class from HierachialItem Response
            </summary>
            <param name="items">BlobHierarchyItem</param>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.StandardResponse">
            <summary>
            Standard Response for any response that is given out as a Json
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.StandardResponse.ErrorCode">
            <summary>
            Reference code for errors
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.StandardResponse.Data">
            <summary>
            Actual Response Data for any http request
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.StandardResponse.Success">
            <summary>
            Whether the called action was a success or not
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.StandardResponse.Message">
            <summary>
            Message related to the method that was called if any
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.DTOs.User.UserLogin">
            <summary>
            DTO for User Login API
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.User.UserLogin.Username">
            <summary>
            Username of a user
            </summary>
        </member>
        <member name="P:OpenLockerWebApi.DTOs.User.UserLogin.Password">
            <summary>
            Password for the Username
            </summary>
        </member>
        <member name="M:OpenLockerWebApi.Helper.HashGenerator.GenerateHash(OpenLockerWebApi.Models.User)">
            <summary>
            Generate Hash for the Password of Provided user
            </summary>
            <param name="user">The user for which password is to be generated</param>
            <returns>Hashed Password string</returns>
        </member>
        <member name="T:OpenLockerWebApi.Helper.OpenLockerSettingsResolver">
            <summary>
            Class to store DatabaseSettings and load it from .env files
            </summary>
        </member>
        <member name="T:OpenLockerWebApi.Services.BlobService.IBlobService">
            <summary>
            Blob Service which has to be implemented by any blob service provider
            Currently there is one one implementation of Blob Service and it is for Azure Blob Storage
            </summary>
        </member>
        <member name="M:OpenLockerWebApi.Services.BlobService.IBlobService.CreateContainerForUser(OpenLockerWebApi.Models.User)">
            <summary>
            Every user will have a common root folder which will be considered as their locker
            </summary>
            <param name="user">User for which you have to create a storage folder</param>
            <returns>Name of the root folder</returns>
        </member>
        <member name="M:OpenLockerWebApi.Services.BlobService.IBlobService.GetContainerForUser(OpenLockerWebApi.Models.User)">
            <summary>
            Get Container in which user files are stored
            </summary>
            <param name="user">User for which Container is requested</param>
            <returns></returns>
        </member>
        <member name="M:OpenLockerWebApi.Services.BlobService.IBlobService.GetFiles(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Gets Root folder for the specified user
            </summary>
            <param name="client">Blob Container Client for the appropriate container</param>
            <param name="prefix">Prefix from where you want to list your files</param>
            <returns>List of files and prefixes in the given folder</returns>
        </member>
        <member name="M:OpenLockerWebApi.Services.BlobService.IBlobService.GetDownloadUrl(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Generates SAS token for the file with READ perms and returns url to download the
            file
            </summary>
            <param name="client">Blob Container Client for the appropriate container</param>
            <param name="fileName">File that you want to download</param>
            <returns>URL with appended token to download file</returns>
        </member>
        <member name="M:OpenLockerWebApi.Services.BlobService.IBlobService.GetUploadSasUri(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Get Upload SasUri for a file
            </summary>
            <param name="client">Container client in which you have to upload the file</param>
            <param name="fileName">File Name for which you have to create upload uri</param>
            <returns>SasUri for the file which you can use to upload the file</returns>
        </member>
        <member name="M:OpenLockerWebApi.Services.BlobService.IBlobService.DeleteBlob(Azure.Storage.Blobs.BlobContainerClient,System.String)">
            <summary>
            Delete a blob as specified by the file name
            </summary>
            <param name="client">Client for the container from which blob has to be deleted</param>
            <param name="filename">File name with all the prefixes which is to be deleted</param>
            <returns>Whether the delete process was successful or not</returns>
        </member>
    </members>
</doc>
